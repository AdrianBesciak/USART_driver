
USART_driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000003d6  0000046a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003d6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  0080010c  0080010c  00000476  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000476  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000004e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ce2  00000000  00000000  0000050c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000070b  00000000  00000000  000011ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005d0  00000000  00000000  000018f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  00001ecc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003c7  00000000  00000000  00001f00  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006dd  00000000  00000000  000022c7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  000029a4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d4 e0       	ldi	r29, 0x04	; 4
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 ed       	ldi	r30, 0xD6	; 214
  7c:	f3 e0       	ldi	r31, 0x03	; 3
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 30       	cpi	r26, 0x0C	; 12
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e0       	ldi	r26, 0x0C	; 12
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 30       	cpi	r26, 0x0E	; 14
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <main>
  9e:	0c 94 e9 01 	jmp	0x3d2	; 0x3d2 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <welcome>:
int x;

void welcome(void)
{
	uint8_t h=0x76, e=0x79, l=0x38, o=0x3F;
	PORTB=h;
  a6:	86 e7       	ldi	r24, 0x76	; 118
  a8:	85 b9       	out	0x05, r24	; 5
	PORTD=0x10;
  aa:	80 e1       	ldi	r24, 0x10	; 16
  ac:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ae:	2f ef       	ldi	r18, 0xFF	; 255
  b0:	84 e3       	ldi	r24, 0x34	; 52
  b2:	9c e0       	ldi	r25, 0x0C	; 12
  b4:	21 50       	subi	r18, 0x01	; 1
  b6:	80 40       	sbci	r24, 0x00	; 0
  b8:	90 40       	sbci	r25, 0x00	; 0
  ba:	e1 f7       	brne	.-8      	; 0xb4 <welcome+0xe>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <welcome+0x18>
  be:	00 00       	nop
	_delay_ms(500);
	for(uint8_t i=0; i<50; i++)
  c0:	80 e0       	ldi	r24, 0x00	; 0
			PORTD=0x10;
			_delay_ms(5);
		}
		else
		{
			PORTB=h;
  c2:	46 e7       	ldi	r20, 0x76	; 118
	_delay_ms(500);
	for(uint8_t i=0; i<50; i++)
	{
		if (i%2==0)
		{
			PORTB=e;
  c4:	39 e7       	ldi	r19, 0x79	; 121
			PORTD=0x10;
  c6:	20 e1       	ldi	r18, 0x10	; 16
	PORTB=h;
	PORTD=0x10;
	_delay_ms(500);
	for(uint8_t i=0; i<50; i++)
	{
		if (i%2==0)
  c8:	80 fd       	sbrc	r24, 0
  ca:	09 c0       	rjmp	.+18     	; 0xde <welcome+0x38>
		{
			PORTB=e;
  cc:	35 b9       	out	0x05, r19	; 5
			PORTD=0x10;
  ce:	2b b9       	out	0x0b, r18	; 11
  d0:	ef e0       	ldi	r30, 0x0F	; 15
  d2:	f7 e2       	ldi	r31, 0x27	; 39
  d4:	31 97       	sbiw	r30, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <welcome+0x2e>
  d8:	00 c0       	rjmp	.+0      	; 0xda <welcome+0x34>
  da:	00 00       	nop
  dc:	0a c0       	rjmp	.+20     	; 0xf2 <welcome+0x4c>
			_delay_ms(5);
		}
		else
		{
			PORTB=h;
  de:	45 b9       	out	0x05, r20	; 5
			PORTD<<=1;
  e0:	9b b1       	in	r25, 0x0b	; 11
  e2:	99 0f       	add	r25, r25
  e4:	9b b9       	out	0x0b, r25	; 11
  e6:	ef e0       	ldi	r30, 0x0F	; 15
  e8:	f7 e2       	ldi	r31, 0x27	; 39
  ea:	31 97       	sbiw	r30, 0x01	; 1
  ec:	f1 f7       	brne	.-4      	; 0xea <welcome+0x44>
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <welcome+0x4a>
  f0:	00 00       	nop
{
	uint8_t h=0x76, e=0x79, l=0x38, o=0x3F;
	PORTB=h;
	PORTD=0x10;
	_delay_ms(500);
	for(uint8_t i=0; i<50; i++)
  f2:	8f 5f       	subi	r24, 0xFF	; 255
  f4:	82 33       	cpi	r24, 0x32	; 50
  f6:	41 f7       	brne	.-48     	; 0xc8 <welcome+0x22>
  f8:	90 e0       	ldi	r25, 0x00	; 0
			_delay_ms(5);
		}
	}
	for(uint8_t i=0; i<50; i++)
	{
		if (i%3==0)
  fa:	3b ea       	ldi	r19, 0xAB	; 171
			PORTD<<=1;
			_delay_ms(5);
		}
		else 
		{
			PORTB=h;
  fc:	46 e7       	ldi	r20, 0x76	; 118
			PORTD=0x10;
			_delay_ms(5);
		}
		else if(i%3==1)
		{
			PORTB=e;
  fe:	79 e7       	ldi	r23, 0x79	; 121
	}
	for(uint8_t i=0; i<50; i++)
	{
		if (i%3==0)
		{
			PORTB=l;
 100:	68 e3       	ldi	r22, 0x38	; 56
			PORTD=0x10;
 102:	50 e1       	ldi	r21, 0x10	; 16
			_delay_ms(5);
		}
	}
	for(uint8_t i=0; i<50; i++)
	{
		if (i%3==0)
 104:	93 9f       	mul	r25, r19
 106:	81 2d       	mov	r24, r1
 108:	11 24       	eor	r1, r1
 10a:	86 95       	lsr	r24
 10c:	28 2f       	mov	r18, r24
 10e:	22 0f       	add	r18, r18
 110:	82 0f       	add	r24, r18
 112:	f9 2f       	mov	r31, r25
 114:	f8 1b       	sub	r31, r24
 116:	49 f4       	brne	.+18     	; 0x12a <welcome+0x84>
		{
			PORTB=l;
 118:	65 b9       	out	0x05, r22	; 5
			PORTD=0x10;
 11a:	5b b9       	out	0x0b, r21	; 11
 11c:	ef e0       	ldi	r30, 0x0F	; 15
 11e:	f7 e2       	ldi	r31, 0x27	; 39
 120:	31 97       	sbiw	r30, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <welcome+0x7a>
 124:	00 c0       	rjmp	.+0      	; 0x126 <welcome+0x80>
 126:	00 00       	nop
 128:	17 c0       	rjmp	.+46     	; 0x158 <welcome+0xb2>
			_delay_ms(5);
		}
		else if(i%3==1)
 12a:	f1 30       	cpi	r31, 0x01	; 1
 12c:	59 f4       	brne	.+22     	; 0x144 <welcome+0x9e>
		{
			PORTB=e;
 12e:	75 b9       	out	0x05, r23	; 5
			PORTD<<=1;
 130:	8b b1       	in	r24, 0x0b	; 11
 132:	88 0f       	add	r24, r24
 134:	8b b9       	out	0x0b, r24	; 11
 136:	ef e0       	ldi	r30, 0x0F	; 15
 138:	f7 e2       	ldi	r31, 0x27	; 39
 13a:	31 97       	sbiw	r30, 0x01	; 1
 13c:	f1 f7       	brne	.-4      	; 0x13a <welcome+0x94>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <welcome+0x9a>
 140:	00 00       	nop
 142:	0a c0       	rjmp	.+20     	; 0x158 <welcome+0xb2>
			_delay_ms(5);
		}
		else 
		{
			PORTB=h;
 144:	45 b9       	out	0x05, r20	; 5
			PORTD<<=1;
 146:	8b b1       	in	r24, 0x0b	; 11
 148:	88 0f       	add	r24, r24
 14a:	8b b9       	out	0x0b, r24	; 11
 14c:	ef e0       	ldi	r30, 0x0F	; 15
 14e:	f7 e2       	ldi	r31, 0x27	; 39
 150:	31 97       	sbiw	r30, 0x01	; 1
 152:	f1 f7       	brne	.-4      	; 0x150 <welcome+0xaa>
 154:	00 c0       	rjmp	.+0      	; 0x156 <welcome+0xb0>
 156:	00 00       	nop
			PORTB=h;
			PORTD<<=1;
			_delay_ms(5);
		}
	}
	for(uint8_t i=0; i<50; i++)
 158:	9f 5f       	subi	r25, 0xFF	; 255
 15a:	92 33       	cpi	r25, 0x32	; 50
 15c:	99 f6       	brne	.-90     	; 0x104 <welcome+0x5e>
 15e:	80 e0       	ldi	r24, 0x00	; 0
			PORTD<<=1;
			_delay_ms(5);
		}
		else 
		{
			PORTB=h;
 160:	26 e7       	ldi	r18, 0x76	; 118
			PORTD<<=1;
			_delay_ms(5);
		}
		else if(i%4==2)
		{
			PORTB=e;
 162:	59 e7       	ldi	r21, 0x79	; 121
			PORTD=0x10;
			_delay_ms(5);
		}
		else if(i%4==1)
		{
			PORTB=l;
 164:	38 e3       	ldi	r19, 0x38	; 56
	for(uint8_t i=0; i<50; i++)
	{
		if (i%4==0)
		{
			PORTB=l;
			PORTD=0x10;
 166:	40 e1       	ldi	r20, 0x10	; 16
			_delay_ms(5);
		}
	}
	for(uint8_t i=0; i<50; i++)
	{
		if (i%4==0)
 168:	98 2f       	mov	r25, r24
 16a:	93 70       	andi	r25, 0x03	; 3
 16c:	49 f4       	brne	.+18     	; 0x180 <welcome+0xda>
		{
			PORTB=l;
 16e:	35 b9       	out	0x05, r19	; 5
			PORTD=0x10;
 170:	4b b9       	out	0x0b, r20	; 11
 172:	ef e0       	ldi	r30, 0x0F	; 15
 174:	f7 e2       	ldi	r31, 0x27	; 39
 176:	31 97       	sbiw	r30, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <welcome+0xd0>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <welcome+0xd6>
 17c:	00 00       	nop
 17e:	24 c0       	rjmp	.+72     	; 0x1c8 <welcome+0x122>
			_delay_ms(5);
		}
		else if(i%4==1)
 180:	91 30       	cpi	r25, 0x01	; 1
 182:	59 f4       	brne	.+22     	; 0x19a <welcome+0xf4>
		{
			PORTB=l;
 184:	35 b9       	out	0x05, r19	; 5
			PORTD<<=1;
 186:	9b b1       	in	r25, 0x0b	; 11
 188:	99 0f       	add	r25, r25
 18a:	9b b9       	out	0x0b, r25	; 11
 18c:	ef e0       	ldi	r30, 0x0F	; 15
 18e:	f7 e2       	ldi	r31, 0x27	; 39
 190:	31 97       	sbiw	r30, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <welcome+0xea>
 194:	00 c0       	rjmp	.+0      	; 0x196 <welcome+0xf0>
 196:	00 00       	nop
 198:	17 c0       	rjmp	.+46     	; 0x1c8 <welcome+0x122>
			_delay_ms(5);
		}
		else if(i%4==2)
 19a:	92 30       	cpi	r25, 0x02	; 2
 19c:	59 f4       	brne	.+22     	; 0x1b4 <welcome+0x10e>
		{
			PORTB=e;
 19e:	55 b9       	out	0x05, r21	; 5
			PORTD<<=1;
 1a0:	9b b1       	in	r25, 0x0b	; 11
 1a2:	99 0f       	add	r25, r25
 1a4:	9b b9       	out	0x0b, r25	; 11
 1a6:	ef e0       	ldi	r30, 0x0F	; 15
 1a8:	f7 e2       	ldi	r31, 0x27	; 39
 1aa:	31 97       	sbiw	r30, 0x01	; 1
 1ac:	f1 f7       	brne	.-4      	; 0x1aa <welcome+0x104>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <welcome+0x10a>
 1b0:	00 00       	nop
 1b2:	0a c0       	rjmp	.+20     	; 0x1c8 <welcome+0x122>
			_delay_ms(5);
		}
		else 
		{
			PORTB=h;
 1b4:	25 b9       	out	0x05, r18	; 5
			PORTD<<=1;
 1b6:	9b b1       	in	r25, 0x0b	; 11
 1b8:	99 0f       	add	r25, r25
 1ba:	9b b9       	out	0x0b, r25	; 11
 1bc:	ef e0       	ldi	r30, 0x0F	; 15
 1be:	f7 e2       	ldi	r31, 0x27	; 39
 1c0:	31 97       	sbiw	r30, 0x01	; 1
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <welcome+0x11a>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <welcome+0x120>
 1c6:	00 00       	nop
			PORTB=h;
			PORTD<<=1;
			_delay_ms(5);
		}
	}
	for(uint8_t i=0; i<50; i++)
 1c8:	8f 5f       	subi	r24, 0xFF	; 255
 1ca:	82 33       	cpi	r24, 0x32	; 50
 1cc:	69 f6       	brne	.-102    	; 0x168 <welcome+0xc2>
 1ce:	80 e0       	ldi	r24, 0x00	; 0
			PORTD<<=1;
			_delay_ms(5);
		}
		else
		{
			PORTB=e;
 1d0:	29 e7       	ldi	r18, 0x79	; 121
			PORTD<<=1;
			_delay_ms(5);
		}
		else if(i%4==2)
		{
			PORTB=l;
 1d2:	58 e3       	ldi	r21, 0x38	; 56
	}
	for(uint8_t i=0; i<50; i++)
	{
		if (i%4==0)
		{
			PORTB=o;
 1d4:	4f e3       	ldi	r20, 0x3F	; 63
			PORTD=0x10;
 1d6:	30 e1       	ldi	r19, 0x10	; 16
			_delay_ms(5);
		}
	}
	for(uint8_t i=0; i<50; i++)
	{
		if (i%4==0)
 1d8:	98 2f       	mov	r25, r24
 1da:	93 70       	andi	r25, 0x03	; 3
 1dc:	49 f4       	brne	.+18     	; 0x1f0 <welcome+0x14a>
		{
			PORTB=o;
 1de:	45 b9       	out	0x05, r20	; 5
			PORTD=0x10;
 1e0:	3b b9       	out	0x0b, r19	; 11
 1e2:	ef e0       	ldi	r30, 0x0F	; 15
 1e4:	f7 e2       	ldi	r31, 0x27	; 39
 1e6:	31 97       	sbiw	r30, 0x01	; 1
 1e8:	f1 f7       	brne	.-4      	; 0x1e6 <welcome+0x140>
 1ea:	00 c0       	rjmp	.+0      	; 0x1ec <welcome+0x146>
 1ec:	00 00       	nop
 1ee:	24 c0       	rjmp	.+72     	; 0x238 <welcome+0x192>
			_delay_ms(5);
		}
		else if(i%4==1)
 1f0:	91 30       	cpi	r25, 0x01	; 1
 1f2:	59 f4       	brne	.+22     	; 0x20a <welcome+0x164>
		{
			PORTB=l;
 1f4:	55 b9       	out	0x05, r21	; 5
			PORTD<<=1;
 1f6:	9b b1       	in	r25, 0x0b	; 11
 1f8:	99 0f       	add	r25, r25
 1fa:	9b b9       	out	0x0b, r25	; 11
 1fc:	ef e0       	ldi	r30, 0x0F	; 15
 1fe:	f7 e2       	ldi	r31, 0x27	; 39
 200:	31 97       	sbiw	r30, 0x01	; 1
 202:	f1 f7       	brne	.-4      	; 0x200 <welcome+0x15a>
 204:	00 c0       	rjmp	.+0      	; 0x206 <welcome+0x160>
 206:	00 00       	nop
 208:	17 c0       	rjmp	.+46     	; 0x238 <welcome+0x192>
			_delay_ms(5);
		}
		else if(i%4==2)
 20a:	92 30       	cpi	r25, 0x02	; 2
 20c:	59 f4       	brne	.+22     	; 0x224 <welcome+0x17e>
		{
			PORTB=l;
 20e:	55 b9       	out	0x05, r21	; 5
			PORTD<<=1;
 210:	9b b1       	in	r25, 0x0b	; 11
 212:	99 0f       	add	r25, r25
 214:	9b b9       	out	0x0b, r25	; 11
 216:	ef e0       	ldi	r30, 0x0F	; 15
 218:	f7 e2       	ldi	r31, 0x27	; 39
 21a:	31 97       	sbiw	r30, 0x01	; 1
 21c:	f1 f7       	brne	.-4      	; 0x21a <welcome+0x174>
 21e:	00 c0       	rjmp	.+0      	; 0x220 <welcome+0x17a>
 220:	00 00       	nop
 222:	0a c0       	rjmp	.+20     	; 0x238 <welcome+0x192>
			_delay_ms(5);
		}
		else
		{
			PORTB=e;
 224:	25 b9       	out	0x05, r18	; 5
			PORTD<<=1;
 226:	9b b1       	in	r25, 0x0b	; 11
 228:	99 0f       	add	r25, r25
 22a:	9b b9       	out	0x0b, r25	; 11
 22c:	ef e0       	ldi	r30, 0x0F	; 15
 22e:	f7 e2       	ldi	r31, 0x27	; 39
 230:	31 97       	sbiw	r30, 0x01	; 1
 232:	f1 f7       	brne	.-4      	; 0x230 <welcome+0x18a>
 234:	00 c0       	rjmp	.+0      	; 0x236 <welcome+0x190>
 236:	00 00       	nop
			PORTB=h;
			PORTD<<=1;
			_delay_ms(5);
		}
	}
	for(uint8_t i=0; i<50; i++)
 238:	8f 5f       	subi	r24, 0xFF	; 255
 23a:	82 33       	cpi	r24, 0x32	; 50
 23c:	69 f6       	brne	.-102    	; 0x1d8 <welcome+0x132>
 23e:	90 e0       	ldi	r25, 0x00	; 0
			_delay_ms(5);
		}
	}
	for(uint8_t i=0; i<50; i++)
	{
		if (i%3==0)
 240:	3b ea       	ldi	r19, 0xAB	; 171
			PORTD<<=1;
			_delay_ms(5);
		}
		else
		{
			PORTB=l;
 242:	48 e3       	ldi	r20, 0x38	; 56
	}
	for(uint8_t i=0; i<50; i++)
	{
		if (i%3==0)
		{
			PORTB=o;
 244:	6f e3       	ldi	r22, 0x3F	; 63
			PORTD=0x20;
 246:	50 e2       	ldi	r21, 0x20	; 32
			_delay_ms(5);
		}
	}
	for(uint8_t i=0; i<50; i++)
	{
		if (i%3==0)
 248:	93 9f       	mul	r25, r19
 24a:	81 2d       	mov	r24, r1
 24c:	11 24       	eor	r1, r1
 24e:	86 95       	lsr	r24
 250:	28 2f       	mov	r18, r24
 252:	22 0f       	add	r18, r18
 254:	82 0f       	add	r24, r18
 256:	f9 2f       	mov	r31, r25
 258:	f8 1b       	sub	r31, r24
 25a:	49 f4       	brne	.+18     	; 0x26e <welcome+0x1c8>
		{
			PORTB=o;
 25c:	65 b9       	out	0x05, r22	; 5
			PORTD=0x20;
 25e:	5b b9       	out	0x0b, r21	; 11
 260:	ef e0       	ldi	r30, 0x0F	; 15
 262:	f7 e2       	ldi	r31, 0x27	; 39
 264:	31 97       	sbiw	r30, 0x01	; 1
 266:	f1 f7       	brne	.-4      	; 0x264 <welcome+0x1be>
 268:	00 c0       	rjmp	.+0      	; 0x26a <welcome+0x1c4>
 26a:	00 00       	nop
 26c:	17 c0       	rjmp	.+46     	; 0x29c <welcome+0x1f6>
			_delay_ms(5);
		}
		else if(i%3==1)
 26e:	f1 30       	cpi	r31, 0x01	; 1
 270:	59 f4       	brne	.+22     	; 0x288 <welcome+0x1e2>
		{
			PORTB=l;
 272:	45 b9       	out	0x05, r20	; 5
			PORTD<<=1;
 274:	8b b1       	in	r24, 0x0b	; 11
 276:	88 0f       	add	r24, r24
 278:	8b b9       	out	0x0b, r24	; 11
 27a:	ef e0       	ldi	r30, 0x0F	; 15
 27c:	f7 e2       	ldi	r31, 0x27	; 39
 27e:	31 97       	sbiw	r30, 0x01	; 1
 280:	f1 f7       	brne	.-4      	; 0x27e <welcome+0x1d8>
 282:	00 c0       	rjmp	.+0      	; 0x284 <welcome+0x1de>
 284:	00 00       	nop
 286:	0a c0       	rjmp	.+20     	; 0x29c <welcome+0x1f6>
			_delay_ms(5);
		}
		else
		{
			PORTB=l;
 288:	45 b9       	out	0x05, r20	; 5
			PORTD<<=1;
 28a:	8b b1       	in	r24, 0x0b	; 11
 28c:	88 0f       	add	r24, r24
 28e:	8b b9       	out	0x0b, r24	; 11
 290:	ef e0       	ldi	r30, 0x0F	; 15
 292:	f7 e2       	ldi	r31, 0x27	; 39
 294:	31 97       	sbiw	r30, 0x01	; 1
 296:	f1 f7       	brne	.-4      	; 0x294 <welcome+0x1ee>
 298:	00 c0       	rjmp	.+0      	; 0x29a <welcome+0x1f4>
 29a:	00 00       	nop
			PORTB=e;
			PORTD<<=1;
			_delay_ms(5);
		}
	}
	for(uint8_t i=0; i<50; i++)
 29c:	9f 5f       	subi	r25, 0xFF	; 255
 29e:	92 33       	cpi	r25, 0x32	; 50
 2a0:	99 f6       	brne	.-90     	; 0x248 <welcome+0x1a2>
 2a2:	80 e0       	ldi	r24, 0x00	; 0
			PORTD=0x40;
			_delay_ms(5);
		}
		else
		{
			PORTB=l;
 2a4:	48 e3       	ldi	r20, 0x38	; 56
	}
	for(uint8_t i=0; i<50; i++)
	{
		if (i%2==0)
		{
			PORTB=o;
 2a6:	3f e3       	ldi	r19, 0x3F	; 63
			PORTD=0x40;
 2a8:	20 e4       	ldi	r18, 0x40	; 64
			_delay_ms(5);
		}
	}
	for(uint8_t i=0; i<50; i++)
	{
		if (i%2==0)
 2aa:	80 fd       	sbrc	r24, 0
 2ac:	09 c0       	rjmp	.+18     	; 0x2c0 <welcome+0x21a>
		{
			PORTB=o;
 2ae:	35 b9       	out	0x05, r19	; 5
			PORTD=0x40;
 2b0:	2b b9       	out	0x0b, r18	; 11
 2b2:	ef e0       	ldi	r30, 0x0F	; 15
 2b4:	f7 e2       	ldi	r31, 0x27	; 39
 2b6:	31 97       	sbiw	r30, 0x01	; 1
 2b8:	f1 f7       	brne	.-4      	; 0x2b6 <welcome+0x210>
 2ba:	00 c0       	rjmp	.+0      	; 0x2bc <welcome+0x216>
 2bc:	00 00       	nop
 2be:	0a c0       	rjmp	.+20     	; 0x2d4 <welcome+0x22e>
			_delay_ms(5);
		}
		else
		{
			PORTB=l;
 2c0:	45 b9       	out	0x05, r20	; 5
			PORTD<<=1;
 2c2:	9b b1       	in	r25, 0x0b	; 11
 2c4:	99 0f       	add	r25, r25
 2c6:	9b b9       	out	0x0b, r25	; 11
 2c8:	ef e0       	ldi	r30, 0x0F	; 15
 2ca:	f7 e2       	ldi	r31, 0x27	; 39
 2cc:	31 97       	sbiw	r30, 0x01	; 1
 2ce:	f1 f7       	brne	.-4      	; 0x2cc <welcome+0x226>
 2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <welcome+0x22c>
 2d2:	00 00       	nop
			PORTB=l;
			PORTD<<=1;
			_delay_ms(5);
		}
	}
	for(uint8_t i=0; i<50; i++)
 2d4:	8f 5f       	subi	r24, 0xFF	; 255
 2d6:	82 33       	cpi	r24, 0x32	; 50
 2d8:	41 f7       	brne	.-48     	; 0x2aa <welcome+0x204>
			PORTB=l;
			PORTD<<=1;
			_delay_ms(5);
		}
	}
	PORTB=o;
 2da:	8f e3       	ldi	r24, 0x3F	; 63
 2dc:	85 b9       	out	0x05, r24	; 5
	PORTD=0x80;
 2de:	80 e8       	ldi	r24, 0x80	; 128
 2e0:	8b b9       	out	0x0b, r24	; 11
 2e2:	ff ef       	ldi	r31, 0xFF	; 255
 2e4:	24 e3       	ldi	r18, 0x34	; 52
 2e6:	8c e0       	ldi	r24, 0x0C	; 12
 2e8:	f1 50       	subi	r31, 0x01	; 1
 2ea:	20 40       	sbci	r18, 0x00	; 0
 2ec:	80 40       	sbci	r24, 0x00	; 0
 2ee:	e1 f7       	brne	.-8      	; 0x2e8 <welcome+0x242>
 2f0:	00 c0       	rjmp	.+0      	; 0x2f2 <welcome+0x24c>
 2f2:	00 00       	nop
	_delay_ms(500);
	PORTD=0x00;
 2f4:	1b b8       	out	0x0b, r1	; 11
 2f6:	08 95       	ret

000002f8 <main>:
}

int main(void)
{
	DDRB=0xFF;
 2f8:	8f ef       	ldi	r24, 0xFF	; 255
 2fa:	84 b9       	out	0x04, r24	; 4
	DDRD|=0xF0;
 2fc:	8a b1       	in	r24, 0x0a	; 10
 2fe:	80 6f       	ori	r24, 0xF0	; 240
 300:	8a b9       	out	0x0a, r24	; 10
    PORTB=0x01;
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	85 b9       	out	0x05, r24	; 5
	PORTD|=0xF0;
 306:	8b b1       	in	r24, 0x0b	; 11
 308:	80 6f       	ori	r24, 0xF0	; 240
 30a:	8b b9       	out	0x0b, r24	; 11
	PORTD=0x10;
 30c:	80 e1       	ldi	r24, 0x10	; 16
 30e:	8b b9       	out	0x0b, r24	; 11
	welcome();
 310:	0e 94 53 00 	call	0xa6	; 0xa6 <welcome>
	uint8_t digit_on_screen=1;
	x=1234;
 314:	82 ed       	ldi	r24, 0xD2	; 210
 316:	94 e0       	ldi	r25, 0x04	; 4
 318:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x1>
 31c:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
			PORTB=error;
		} else
		{
			for (uint8_t i=1; i<digit_on_screen; i++)
				temp/=10;
			PORTB=digits[temp%10];
 320:	ea e0       	ldi	r30, 0x0A	; 10
 322:	f0 e0       	ldi	r31, 0x00	; 0
		_delay_ms(5);
		PORTD<<=1;
		digit_on_screen++;
		if(digit_on_screen>4)
		{
			PORTD=0x10;
 324:	40 e1       	ldi	r20, 0x10	; 16
	_delay_ms(500);
	PORTD=0x00;
}

int main(void)
{
 326:	31 e0       	ldi	r19, 0x01	; 1
	welcome();
	uint8_t digit_on_screen=1;
	x=1234;
    while (1) 
    {
		int temp=x;
 328:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
 32c:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x1>
		if(x>=10000)
 330:	80 31       	cpi	r24, 0x10	; 16
 332:	27 e2       	ldi	r18, 0x27	; 39
 334:	92 07       	cpc	r25, r18
 336:	1c f4       	brge	.+6      	; 0x33e <main+0x46>
		{
			PORTB=error;
		} else
		{
			for (uint8_t i=1; i<digit_on_screen; i++)
 338:	32 30       	cpi	r19, 0x02	; 2
 33a:	28 f4       	brcc	.+10     	; 0x346 <main+0x4e>
 33c:	0c c0       	rjmp	.+24     	; 0x356 <main+0x5e>
    while (1) 
    {
		int temp=x;
		if(x>=10000)
		{
			PORTB=error;
 33e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 342:	85 b9       	out	0x05, r24	; 5
 344:	10 c0       	rjmp	.+32     	; 0x366 <main+0x6e>
		} else
		{
			for (uint8_t i=1; i<digit_on_screen; i++)
 346:	21 e0       	ldi	r18, 0x01	; 1
				temp/=10;
 348:	bf 01       	movw	r22, r30
 34a:	0e 94 c1 01 	call	0x382	; 0x382 <__divmodhi4>
 34e:	cb 01       	movw	r24, r22
		if(x>=10000)
		{
			PORTB=error;
		} else
		{
			for (uint8_t i=1; i<digit_on_screen; i++)
 350:	2f 5f       	subi	r18, 0xFF	; 255
 352:	32 13       	cpse	r19, r18
 354:	f9 cf       	rjmp	.-14     	; 0x348 <main+0x50>
				temp/=10;
			PORTB=digits[temp%10];
 356:	bf 01       	movw	r22, r30
 358:	0e 94 c1 01 	call	0x382	; 0x382 <__divmodhi4>
 35c:	dc 01       	movw	r26, r24
 35e:	af 5f       	subi	r26, 0xFF	; 255
 360:	be 4f       	sbci	r27, 0xFE	; 254
 362:	8c 91       	ld	r24, X
 364:	85 b9       	out	0x05, r24	; 5
 366:	8f e0       	ldi	r24, 0x0F	; 15
 368:	97 e2       	ldi	r25, 0x27	; 39
 36a:	01 97       	sbiw	r24, 0x01	; 1
 36c:	f1 f7       	brne	.-4      	; 0x36a <main+0x72>
 36e:	00 c0       	rjmp	.+0      	; 0x370 <main+0x78>
 370:	00 00       	nop
		}
		_delay_ms(5);
		PORTD<<=1;
 372:	8b b1       	in	r24, 0x0b	; 11
 374:	88 0f       	add	r24, r24
 376:	8b b9       	out	0x0b, r24	; 11
		digit_on_screen++;
 378:	3f 5f       	subi	r19, 0xFF	; 255
		if(digit_on_screen>4)
 37a:	35 30       	cpi	r19, 0x05	; 5
 37c:	a9 f6       	brne	.-86     	; 0x328 <main+0x30>
		{
			PORTD=0x10;
 37e:	4b b9       	out	0x0b, r20	; 11
 380:	d2 cf       	rjmp	.-92     	; 0x326 <main+0x2e>

00000382 <__divmodhi4>:
 382:	97 fb       	bst	r25, 7
 384:	07 2e       	mov	r0, r23
 386:	16 f4       	brtc	.+4      	; 0x38c <__divmodhi4+0xa>
 388:	00 94       	com	r0
 38a:	07 d0       	rcall	.+14     	; 0x39a <__divmodhi4_neg1>
 38c:	77 fd       	sbrc	r23, 7
 38e:	09 d0       	rcall	.+18     	; 0x3a2 <__divmodhi4_neg2>
 390:	0e 94 d5 01 	call	0x3aa	; 0x3aa <__udivmodhi4>
 394:	07 fc       	sbrc	r0, 7
 396:	05 d0       	rcall	.+10     	; 0x3a2 <__divmodhi4_neg2>
 398:	3e f4       	brtc	.+14     	; 0x3a8 <__divmodhi4_exit>

0000039a <__divmodhi4_neg1>:
 39a:	90 95       	com	r25
 39c:	81 95       	neg	r24
 39e:	9f 4f       	sbci	r25, 0xFF	; 255
 3a0:	08 95       	ret

000003a2 <__divmodhi4_neg2>:
 3a2:	70 95       	com	r23
 3a4:	61 95       	neg	r22
 3a6:	7f 4f       	sbci	r23, 0xFF	; 255

000003a8 <__divmodhi4_exit>:
 3a8:	08 95       	ret

000003aa <__udivmodhi4>:
 3aa:	aa 1b       	sub	r26, r26
 3ac:	bb 1b       	sub	r27, r27
 3ae:	51 e1       	ldi	r21, 0x11	; 17
 3b0:	07 c0       	rjmp	.+14     	; 0x3c0 <__udivmodhi4_ep>

000003b2 <__udivmodhi4_loop>:
 3b2:	aa 1f       	adc	r26, r26
 3b4:	bb 1f       	adc	r27, r27
 3b6:	a6 17       	cp	r26, r22
 3b8:	b7 07       	cpc	r27, r23
 3ba:	10 f0       	brcs	.+4      	; 0x3c0 <__udivmodhi4_ep>
 3bc:	a6 1b       	sub	r26, r22
 3be:	b7 0b       	sbc	r27, r23

000003c0 <__udivmodhi4_ep>:
 3c0:	88 1f       	adc	r24, r24
 3c2:	99 1f       	adc	r25, r25
 3c4:	5a 95       	dec	r21
 3c6:	a9 f7       	brne	.-22     	; 0x3b2 <__udivmodhi4_loop>
 3c8:	80 95       	com	r24
 3ca:	90 95       	com	r25
 3cc:	bc 01       	movw	r22, r24
 3ce:	cd 01       	movw	r24, r26
 3d0:	08 95       	ret

000003d2 <_exit>:
 3d2:	f8 94       	cli

000003d4 <__stop_program>:
 3d4:	ff cf       	rjmp	.-2      	; 0x3d4 <__stop_program>
